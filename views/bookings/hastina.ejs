<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Booking - Gedung Hastinapura</title>
    
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">

    <style>
        body {
            background-image: url('/images/background-image.png');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }

        #loadingOverlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            display: none;

            opacity: 1;
            transition: opacity 0.8s ease-out;
        }

        #loadingOverlay.hidden {
            opacity: 0;
            pointer-events: none;
        }

        .loading-spinner {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            border: 8px solid transparent;
            border-top: 8px solid #ff0000;
            animation: spin 1s linear infinite, colorChange 3s ease-in-out infinite;
        }

        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        @keyframes colorChange {
            0% { border-top-color: #ff0000; }
            25% { border-top-color: #00ff00; }
            50% { border-top-color: #0000ff; }
            75% { border-top-color: #ff00ff; }
            100% { border-top-color: #ff0000; }
        }
    </style>
</head>

<body>
    <%- include('../partials/header') %>

    <main class="container">
        <h2 class="text-center">Pesan Tempat Duduk untuk Anak-Anak dan Pendamping Sidang Anda di Gedung Hastinapura</h2>

        <div id="alertMessage" style="display: none; padding: 10px; margin-top: 10px;"></div>

        <form id="bookingForm">
            <input type="hidden" name="gedung" value="Hastinapura">

            <section class="section">
                <h2>Data Asal Sidang Jemaat</h2>
                <div class="form-group">
                    <label for="distrik">Distrik</label>
                    <select id="distrik" name="distrik_id">
                        <option value="" selected disabled>Pilih Distrik!</option>
                        <% distrikList.forEach(distrik => { %>
                            <option value="<%= distrik.id %>">
                                <%= distrik.nama_distrik %>
                            </option>
                        <% }) %>
                    </select>
                </div>
                <div class="form-group">
                    <label for="sidang_jemaat_id">Sidang Jemaat</label>
                    <select id="sidang_jemaat_id" name="sidang_jemaat_id">
                        <option value="" selected disabled>Pilih Sidang Jemaat!</option>
                    </select>
                </div>
            </section>

            <section class="section">
                <h2>Data Anak</h2>
                <div class="form-group" style="display: flex; align-items: center; gap: 10px;">
                    <div style="display: flex; flex-direction: column; flex-basis: 33%;">
                        <label for="jumlah_anak">Jumlah Anak</label>
                        <input type="number" id="jumlah_anak" name="jumlah_anak" min="1" max="100" value="1" required>
                    </div>

                    <div style="display: flex; flex-direction: column; flex-basis: 33%;">
                        <label for="jumlah_pendamping">Jumlah Pendamping</label>
                        <input type="number" id="jumlah_pendamping" name="jumlah_pendamping" readonly 
                            style="background-color: #e0e0e0; color: #555;">
                    </div>

                    <div style="display: flex; flex-direction: column; flex-basis: 33%;">
                        <label for="num_seats">Total Kursi</label>
                        <input type="number" id="num_seats" name="num_seats" readonly 
                            style="background-color: #e0e0e0; color: #555;">
                    </div>
                </div>
            
                <div class="form-group" id="anak_container" style="display: flex; flex-direction: column; gap: 15px;">
                    <!-- Will be generated by JavaScript -->
                </div>
            
                <h2>Data Pendamping</h2>
                <div class="form-group" id="pendamping_container" style="display: flex; flex-direction: column; gap: 15px;">
                    <!-- Will be generated by JavaScript -->
                </div>
            </section>

            <section class="section">
                <h2>Blok</h2>
                <div class="form-group">
                    <label for="block_id">Pilih Blok:</label>
                    <div class="image-container">
                        <img src="/images/greja_layuot-1.png" alt="Gereja Layout" class="layout-image">
                    </div>
                    <div class="seat-selection">
                        <% seatData.forEach(block => { %>
                            <div class="seat-block <%= (block.max - block.booked) <= 0 ? 'disabled' : '' %>"
                                data-block="<%= block.id %>"
                                data-remaining-seats="<%= block.max - block.booked %>"
                                data-max-seats="<%= block.max %>">
                                <div class="seat-label">Blok <%= block.block_name %>
                                </div>
                                <div class="seat-count">
                                    <%= block.booked %>/<%= block.max %>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                    <input type="hidden" id="block_id" name="block_id" required>
                </div>
            </section>
            
            <button type="submit" class="btn">Pesan Sekarang!</button>
        </form>

        
    </main>

    <%- include('../partials/footer') %>

    <div id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <!-- Event Listener for anak_container and pendamping_container -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const jumlahAnakInput = document.getElementById("jumlah_anak");
            const jumlahPendampingInput = document.getElementById("jumlah_pendamping");
            const anakContainer = document.getElementById("anak_container");
            const pendampingContainer = document.getElementById("pendamping_container");
            const isMobile = window.matchMedia("(max-width: 768px)");
    
            function generateChildFields(count) {
                anakContainer.innerHTML = "";
    
                for (let i = 1; i <= count; i++) {
                    const row = document.createElement("div");
                    row.style.display = "flex";
                    row.style.flexDirection = isMobile.matches ? "column" : "row";
                    row.style.gap = "10px";
                    row.style.width = "100%";
                    row.style.alignItems = isMobile.matches ? "stretch" : "center";
    
                    row.innerHTML = `
                        <div style="flex-basis: 3%; text-align: center;">
                            <span style="font-size: 14px; color: gray;">${i}</span>
                        </div>
    
                        <div style="flex-basis: ${isMobile.matches ? '100%' : '70%'};">
                            <input type="text" name="child_name[]" placeholder="Nama Lengkap Anak" required>
                        </div>
    
                        <div style="flex-basis: ${isMobile.matches ? '100%' : '12%'};">
                            <input type="number" name="child_class[]" min="1" placeholder="Kelas" required>
                        </div>
    
                        <div style="flex-basis: ${isMobile.matches ? '100%' : '15%'};">
                            <input type="number" name="child_age[]" min="1" max="100" placeholder="Umur" required>
                        </div>
                    `;
    
                    anakContainer.appendChild(row);
                }
            }
    
            function generatePendampingFields(count) {
                pendampingContainer.innerHTML = "";
    
                for (let i = 1; i <= count; i++) {
                    const row = document.createElement("div");
                    row.style.display = "flex";
                    row.style.flexDirection = isMobile.matches ? "column" : "row";
                    row.style.gap = "10px";
                    row.style.width = "100%";
                    row.style.alignItems = isMobile.matches ? "stretch" : "center";
    
                    row.innerHTML = `
                        <div style="flex-basis: 3%; text-align: center;">
                            <span style="font-size: 14px; color: gray;">${i}</span>
                        </div>
    
                        <div style="flex-basis: ${isMobile.matches ? '100%' : '69%'};">
                            <input type="text" name="pendamping_name[]" placeholder="Nama Lengkap Pendamping" required>
                        </div>
    
                        <div style="flex-basis: ${isMobile.matches ? '100%' : '28%'};">
                            <input type="text" name="pendamping_whatsapp[]" placeholder="WhatsApp Pendamping" required>
                        </div>
                    `;
    
                    pendampingContainer.appendChild(row);
                }
            }
    
            function updateFields() {
                let jumlahAnak = parseInt(jumlahAnakInput.value) || 1;
                jumlahAnak = jumlahAnak > 100 ? 100 : jumlahAnak;
    
                let jumlahPendamping = Math.ceil(jumlahAnak / 5);
                jumlahPendampingInput.value = jumlahPendamping;
    
                let totalKursi = jumlahAnak + jumlahPendamping;
                document.getElementById("num_seats").value = totalKursi;
    
                generateChildFields(jumlahAnak);
                generatePendampingFields(jumlahPendamping);
            }
    
            isMobile.addEventListener("change", updateFields);
    
            updateFields();
            jumlahAnakInput.addEventListener("input", updateFields);
        });
    </script>

    <!-- WhatsApp Number Validation -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const pendampingContainer = document.getElementById("pendamping_container");

            pendampingContainer.addEventListener('input', (event) => {
                if (event.target.name === "pendamping_whatsapp[]") {
                    let value = event.target.value.replace(/\D/g, '');
                    event.target.value = value;

                    const waRegex = /^([1-9][0-9]{7,14}|08[0-9]{8,11})$/;

                    if (!waRegex.test(value)) {
                        event.target.setCustomValidity('Nomor WhatsApp harus dalam format 08XXXXXXXXXX atau 628XXXXXXXXX.');
                    } else {
                        event.target.setCustomValidity('');
                    }
                }
            });

            document.querySelector('form').addEventListener('submit', (e) => {
                const waInputs = document.querySelectorAll('input[name="pendamping_whatsapp[]"]');
                for (const input of waInputs) {
                    if (!input.checkValidity()) {
                        e.preventDefault();
                        alert(input.validationMessage);
                        return;
                    }
                }
            });
        });
    </script>

    <!-- Event Listener for distrik_id and sidang_jemaat_id -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const distrikSelect = document.getElementById('distrik');
            const asalSidangSelect = document.getElementById('sidang_jemaat_id');
            const gedungInput = document.querySelector('input[name="gedung"]');

            distrikSelect.addEventListener('change', () => {
                const distrikId = distrikSelect.value;
                const gedung = encodeURIComponent(gedungInput.value);
                
                fetch(`/booking/asal-sidang/${distrikId}?gedung=${gedung}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(res => res.json())
                .then(data => {
                    asalSidangSelect.innerHTML = '';
                    data.forEach(asalSidang => {
                        const option = document.createElement('option');
                        option.value = asalSidang.id;
                        option.textContent = asalSidang.nama_sidang;
                        asalSidangSelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching data:', error));
            });
        });
    </script>

    <!-- Event Listener for block_id and num_seats -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const seatBlocks = document.querySelectorAll('.seat-block');
            const blokBookingInput = document.getElementById('block_id');
            const jumlahSeatInput = document.getElementById('num_seats');

            if (seatBlocks.length === 1) {
                const singleBlock = seatBlocks[0];
                singleBlock.classList.add('selected');

                const selectedBlok = singleBlock.getAttribute('data-block');
                blokBookingInput.value = selectedBlok;

                const availableSeats = singleBlock.getAttribute('data-remaining-seats');
                jumlahSeatInput.setAttribute('available', availableSeats);
            }

            seatBlocks.forEach(block => {
                block.addEventListener('click', () => {
                    seatBlocks.forEach(b => b.classList.remove('selected'));
                    block.classList.add('selected');

                    const selectedBlok = block.getAttribute('data-block');
                    blokBookingInput.value = selectedBlok;

                    const availableSeats = block.getAttribute('data-remaining-seats');
                    jumlahSeatInput.setAttribute('available', availableSeats);
                });
            });

            document.querySelector('form').addEventListener('submit', (e) => {
                const selectedBlok = blokBookingInput.value;
                const jumlahSeat = parseInt(jumlahSeatInput.value);
                const availableSeats = parseInt(jumlahSeatInput.getAttribute('available'));

                if (!selectedBlok) {
                    e.preventDefault();
                    alert('Silakan pilih blok terlebih dahulu.');
                }

                if (jumlahSeat > availableSeats) {
                    e.preventDefault();
                    alert(`Total kursi yang dipesan (${jumlahSeat} kursi) melebihi kapasitas blok. Maksimal kursi yang masih tersedia: ${availableSeats}.`);
                }
            });
        });
    </script>

    <!-- Event Listener for bookingForm -->
    <script>
        document.getElementById("bookingForm").addEventListener("submit", async function(event) {
            event.preventDefault();
        
            const formData = new FormData(this);
            const data = {};

            formData.forEach((value, key) => {
                if (key.includes("[]")) {
                    key = key.replace("[]", "");
                    if (!data[key]) {
                        data[key] = [];
                    }
                    data[key].push(value);
                } else {
                    data[key] = value;
                }
            });

            const loadingOverlay = document.getElementById("loadingOverlay");
            loadingOverlay.style.display = "flex";
        
            try {
                const response = await fetch('/booking/book', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
        
                const result = await response.json();
                const alertBox = document.getElementById("alertMessage");
        
                if (result.success) {
                    alertBox.style.backgroundColor = "green";
                    alertBox.style.color = "white";
                    alertBox.innerText = result.message;

                    alertBox.scrollIntoView({ behavior: "smooth", block: "center" });

                    setTimeout(() => {
                        loadingOverlay.classList.add("hidden");
                    }, 1000);

                    setTimeout(() => {
                        window.location.href = `/booking/success/${result.data.booking_code}`;
                    }, 1800);

                } else {
                    alertBox.style.backgroundColor = "red";
                    alertBox.style.color = "white";
                    alertBox.innerText = result.message;
                    loadingOverlay.style.display = "none";

                    alertBox.scrollIntoView({ behavior: "smooth", block: "center" });
                }
        
                alertBox.style.display = "block";
            } catch (error) {
                console.error("Error:", error);
                loadingOverlay.style.display = "none";
            }
        });
    </script>
</body>

</html>